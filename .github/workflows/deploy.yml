name: Deploy AWS Lambda Code
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
      runs-on: ubuntu-latest
      steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install coverage
        run: |
          python -m pip install --upgrade pip
          pip install coverage

      - name: Run tests and check coverage
        run: |
          python3 -m coverage run tests/test_CreateProject.py
          coverage report
          
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-west-1

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Get lambda function name
      id: lambda-function-name
      run: |
          if  ${{ steps.extract_branch.outputs.branch == 'main' }}; then
            echo "::set-output name=function-name::'gsp-create-project'"
          else
            echo "::set-output name=function-name::gsp-create-project-${{steps.extract_branch.outputs.branch}}"
          fi
            echo "finish"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
    - name: zip Lambda Function
      run: |
        zip -r9 ${{steps.lambda-function-name.outputs.function-name}}.zip gsp-create-project.py

    - name: AWS upload on S3
      run: |
        aws s3 --region us-west-1 cp ${{steps.lambda-function-name.outputs.function-name}}.zip s3://gsp-cicd-test/

    - name: Check if AWS Lambda Function is present
      id: get-function
      run: |
          {
              aws lambda get-function --function-name ${{steps.lambda-function-name.outputs.function-name}}
              echo "::set-output name=error-code::$?"
          } || {
              echo "::set-output name=error-code::1"
          }

    - name: If present, update lambda
      run: |
        echo "final ${{ steps.get-function.outputs.error-code}}"
        echo "final ${{ steps.get-function.outputs.error-code == '0'}}"
        if  ${{ steps.get-function.outputs.error-code == '0'}} ; then
          echo "Lambda is present"
          aws lambda update-function-code --function-name ${{steps.lambda-function-name.outputs.function-name}} --zip-file fileb://${{steps.lambda-function-name.outputs.function-name}}.zip
        else
          echo "Please create lambda function."
        fi
          echo "finish"
